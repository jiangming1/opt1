;
; Script generated by AutoBuilder 0.5 Prototype
; Embedded Excel Object in AutoIt
; Helps you using Excelfunction and use the results of these back in AutoIT vars.
; Also this can be used as a replacement for the ListView, and load the data direct in the Excel Grid.
; PTREX 09/11/05
;
#include <Excel.au3>
#include <GUIConstants.au3>
#NoTrayIcon
#include <IE.au3>
;Vars
Dim $oMyError
Dim $i
Dim $j

;Declare objects
$oExcel = ObjCreate("OWC10.spreadsheet"); Default to Office XP

If not IsObj($oExcel) Then
    $oExcel = ObjCreate("OWC11.spreadsheet"); Office 2003
EndIf
IF not IsObj($oExcel) Then
    $oExcel = ObjCreate("OWC00.spreadsheet"); Office 2000
EndIf

$oIE = _IECreate("http://www.gjprj.cn/cx1.asp",0,0)
_IELoadWait($oie)

$otable=_IEGetObjById ( $oie,"guanjiapo" )
$atable=_IETableWriteToArray ( $otable )
Local $alastyear[32]
Local $athisyear[32]
$lastyear="2013-06-05"
$thisyear="2014-06-05"
for $i=0 to 99
if StringReplace($atable[1][$i]," ","")=$lastyear Then exitloop
next
for $j=0 to 30
   $alastyear[$j]=StringReplace($atable[2][$i+$j]," ","")
   $oExcel.cells($j,1).value = $j
   $oExcel.cells($j,2).value = $alastyear[$j]
 ;  MsgBox(0,$lastyear, $alastyear[$j])
next
for $i=0 to 999
if StringReplace($atable[1][$i]," ","")=$thisyear Then exitloop
next
for $j=0 to 30
   $athisyear[$j]=StringReplace($atable[2][$i+$j]," ","")
   $oExcel.cells($j,3).value = $athisyear[$j]
;   MsgBox(0,$thisyear, $athisyear[$j])
next
_IEQuit($oie)
$oChartSpace = ObjCreate("OWC11.Chartspace")
$oChartSpace.Clear
$oChartSpace.DisplayToolbar = True
$oChartSpace.AllowPropertyToolbox = True
;Set up the Spreadsheet control to be the data source.
$oChartSpace.DataSource = $oExcel
$oChart = $oChartSpace.Charts.Add(0)
With $oChart
.SetSpreadsheetData("Sheet1!A0:C30", True)
EndWith

$oChart.HasTitle=TRUE
$oChart.ChartTitle.Characters.Text="流量统计表"
$oChart.SeriesCollection(1).Name = "去年"
$oChart.SeriesCollection(2).Name = "今年"


;Main Gui
GuiCreate("Excel Object", 802, 590,(@DesktopWidth-802)/2, (@DesktopHeight-590)/2 , $WS_OVERLAPPEDWINDOW + $WS_VISIBLE + $WS_CLIPSIBLINGS)

$GUI_ActiveX = GUICtrlCreateObj ($oChartSpace, 10, 10 , 780 , 550)
GUICtrlSetStyle ( $GUI_ActiveX, $WS_VISIBLE )
GUICtrlSetResizing ($GUI_ActiveX,$GUI_DOCKAUTO) ; Auto Resize Object

GuiSetState()
While 1
    $msg = GuiGetMsg()
    Select
    Case $msg = $GUI_EVENT_CLOSE
        ExitLoop
    EndSelect
WEnd
Exit



;This is Sven P's custom error handler
Func MyErrFunc()
$HexNumber=hex($oMyError.number,8)
Msgbox(0,"AutoItCOM Test","We intercepted a COM Error !"     & @CRLF & @CRLF & _
             "err.description is: " & @TAB & $oMyError.description  & @CRLF & _
             "err.windescription:"   & @TAB & $oMyError.windescription & @CRLF & _
             "err.number is: "       & @TAB & $HexNumber             & @CRLF & _
             "err.lastdllerror is: " & @TAB & $oMyError.lastdllerror & @CRLF & _
             "err.scriptline is: "   & @TAB & $oMyError.scriptline   & @CRLF & _
             "err.source is: "       & @TAB & $oMyError.source       & @CRLF & _
             "err.helpfile is: "     & @TAB & $oMyError.helpfile     & @CRLF & _
             "err.helpcontext is: " & @TAB & $oMyError.helpcontext _
            )
SetError(1) ; to check for after this function returns
Endfunc
